/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <25 34>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 19>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 38 37 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 40 41 39 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R            &kp T               &kp Y      &kp U        &kp I               &kp O       &kp P               &none
&none  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F      &kp G               &kp H      &mt LSHFT J  &mt RCTRL K         &mt RALT L  &mt RGUI SEMICOLON  &none
&none  &kp Z       &kp X       &kp C        &kp V            &kp B               &kp N      &kp M        &kp COMMA           &kp DOT     &kp FSLH            &none
                               &lt 2 ESC    &lt 1 BACKSPACE  &mt LC(LALT) TAB    &lt 4 RET  &lt 3 SPACE  &lt 5 SINGLE_QUOTE
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none       &none            &none     &kp K_COPY  &kp K_PASTE    &kp K_COPY     &kp K_CUT     &kp K_PASTE  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL   &kp RIGHT_SHIFT  &none     &kp CAPS    &kp LEFT       &kp DOWN       &kp UP_ARROW  &kp RIGHT    &trans
&none  &trans        &trans        &kp K_COPY  &kp K_PASTE      &trans    &kp INSERT  &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END      &trans
                                   &none       &trans           &none     &kp ENTER   &kp BACKSPACE  &kp DEL
            >;
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none   &none   &none   &none   &none     &none       &none             &none              &none            &none         &none
&none  &trans  &trans  &trans  &trans  &trans    &none       &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none
&none  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &none
                       &none   &trans  &none     &kp C_STOP  &kp C_PLAY_PAUSE  &kp K_MUTE
            >;
        };

        num_layer {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8      &kp NUMBER_9  &kp RBKT     &trans  &trans      &trans     &trans         &trans         &trans
&trans  &kp SEMI          &kp NUMBER_4  &kp NUMBER_5      &kp NUMBER_6  &kp EQUAL    &trans  &kp RSHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp TILDE         &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp PIPE     &trans  &trans      &trans     &trans         &trans         &trans
                                        &kp GREATER_THAN  &kp NUMBER_0  &kp MINUS    &trans  &trans      &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp LBRC   &kp AMPERSAND    &kp ASTERISK          &kp SINGLE_QUOTE  &kp RIGHT_BRACE    &trans  &trans          &trans     &trans         &trans         &trans
&trans  &kp COLON  &kp DOLLAR       &kp PRCNT             &kp CARET         &kp EQUAL          &trans  &kp LEFT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp TILDE  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH          &kp PIPE           &trans  &trans          &trans     &trans         &trans         &trans
                                    &kp LEFT_PARENTHESIS  &kp RPAR          &kp UNDERSCORE     &trans  &trans          &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &trans  &trans           &trans             &trans         &trans         &trans
&trans  &kp F11  &kp F4  &kp F5     &kp F6     &kp SCROLLLOCK     &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&trans  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &trans  &trans           &trans             &trans         &trans         &trans
                         &kp K_APP  &kp SPACE  &kp TAB            &trans  &trans           &trans
            >;
        };
    };
};
